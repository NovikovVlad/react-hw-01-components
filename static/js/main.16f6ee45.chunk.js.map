{"version":3,"sources":["Profile/style.js","Profile/Profile.jsx","Statistics/style.js","Statistics/Statistics.jsx","App.js","index.js"],"names":["Wrapper","styled","div","Description","Avatar","img","Name","Tag","p","Location","Stats","ul","Label","span","Quantity","Profile","name","tag","location","avatar","stats","src","alt","followers","views","likes","defaultProps","section","Title","h2","StatList","Item","li","props","background","Percentage","Statistics","title","getRandomColor","color","i","Math","floor","random","items","map","stat","key","id","label","percentage","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o2EAEO,IAAMA,EAAUC,IAAOC,IAAV,KAYPC,EAAcF,IAAOC,IAAV,KAMXE,EAASH,IAAOI,IAAV,KAONC,EAAOL,IAAOC,IAAV,KAOJK,EAAMN,IAAOO,EAAV,KAOHC,EAAWR,IAAOO,EAAV,KAORE,EAAQT,IAAOU,GAAV,KAsBLC,EAAQX,IAAOY,KAAV,KAKLC,EAAWb,IAAOY,KAAV,KCvERE,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACrD,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUC,IAAKF,EAAQG,IAAI,gBAC3B,kBAAC,EAAD,KAASN,GACT,kBAAC,EAAD,KAAQC,GACR,kBAAC,EAAD,KAAaC,IAEf,kBAAC,EAAD,KACE,4BACE,kBAAC,EAAD,kBACA,kBAAC,EAAD,SAAcE,EAAMG,YAEtB,4BACE,kBAAC,EAAD,cACA,kBAAC,EAAD,SAAcH,EAAMI,QAEtB,4BACE,kBAAC,EAAD,cACA,kBAAC,EAAD,SAAcJ,EAAMK,W,uvCAmB9BV,EAAQW,aAAe,CACrBV,KAAM,UACNC,IAAK,GACLC,SAAU,GACVC,OAAQ,GACRC,MAAO,CACLG,UAAW,GACXC,MAAO,EACPC,MAAO,ICjDJ,IAAMzB,EAAUC,IAAO0B,QAAV,KAYPC,EAAQ3B,IAAO4B,GAAV,KAWLC,EAAW7B,IAAOU,GAAV,KAORoB,EAAO9B,IAAO+B,GAAV,KAOD,SAACC,GAAD,OAAWA,EAAMC,cAGpBtB,EAAQX,IAAOY,KAAV,KAQLsB,EAAalC,IAAOY,KAAV,KC9CVuB,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOjB,EAAY,EAAZA,MAC5BkB,EAAiB,WAGrB,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,GAGHK,EAAQxB,EAAMyB,KAAI,SAACC,GAAD,OACtB,kBAAC,EAAD,CAAQC,IAAKD,EAAKE,GAAId,WAAYI,KAChC,kBAAC,EAAD,KAAUQ,EAAKG,OACf,kBAAC,EAAD,KAAeH,EAAKI,gBAIxB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAUb,GACV,kBAAC,EAAD,KAAaO,KAgBnBR,EAAWV,aAAe,CACxBW,MAAO,UACPjB,MAAO,I,oBC1BM+B,MATf,WACE,OACE,6BACE,kBAAC,EAAYC,GACb,kBAAC,EAAD,CAAYf,MAAM,eAAejB,MAAOiC,MCN9CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.16f6ee45.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  font-family: \"Lato\", sans-serif;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 250px;\n  height: 330px;\n  box-shadow: 0 1px 3px rgba(191, 205, 222, 0.75);\n  background-color: #ffffff;\n  margin: 15px;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Avatar = styled.img`\n  padding: 30px;\n  width: 99px;\n  height: 99px;\n  border-radius: 50%;\n`;\n\nexport const Name = styled.div`\n  color: #122236;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 32px;\n`;\n\nexport const Tag = styled.p`\n  margin: 0;\n  padding: 0;\n  color: #768696;\n  font-size: 14px;\n`;\n\nexport const Location = styled.p`\n  margin: 0;\n  padding: 0;\n  color: #768696;\n  font-size: 14px;\n`;\n\nexport const Stats = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  height: 74px;\n  border: 1px solid #e4e9f0;\n  background-color: #f3f6f9;\n\n  li {\n    display: flex;\n    width: 83px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  li + li {\n    border-left: 1px solid #e4e9f0;\n  }\n`;\n\nexport const Label = styled.span`\n  color: #768696;\n  font-size: 12px;\n`;\n\nexport const Quantity = styled.span`\n  color: #1f3349;\n  font-size: 14px;\n  font-weight: 700;\n`;\n","import React from \"react\";\nimport * as S from \"./style\";\nimport PropTypes from \"prop-types\";\n\nexport const Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <S.Wrapper>\n      <S.Description>\n        <S.Avatar src={avatar} alt=\"user avatar\" />\n        <S.Name>{name}</S.Name>\n        <S.Tag>{tag}</S.Tag>\n        <S.Location>{location}</S.Location>\n      </S.Description>\n      <S.Stats>\n        <li>\n          <S.Label>Followers</S.Label>\n          <S.Quantity> {stats.followers}</S.Quantity>\n        </li>\n        <li>\n          <S.Label>Views</S.Label>\n          <S.Quantity> {stats.views}</S.Quantity>\n        </li>\n        <li>\n          <S.Label>Likes</S.Label>\n          <S.Quantity> {stats.likes}</S.Quantity>\n        </li>\n      </S.Stats>\n    </S.Wrapper>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nProfile.defaultProps = {\n  name: \"Unknown\",\n  tag: \"\",\n  location: \"\",\n  avatar: \"\",\n  stats: {\n    followers: \"\",\n    views: 0,\n    likes: 0,\n  },\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.section`\n  width: 268px;\n  height: 130px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: 0 2px 2px rgba(2, 2, 2, 0.02);\n  background-color: #ffffff;\n  font-family: sans-serif;\n  margin: 15px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  padding: 30px 0;\n  color: #475965;\n  font-size: 16px;\n  font-weight: 400;\n  text-transform: uppercase;\n  letter-spacing: 0.16px;\n  text-align: center;\n`;\n\nexport const StatList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 67px;\n  height: 60px;\n  align-items: center;\n  background: ${(props) => props.background};\n`;\n\nexport const Label = styled.span`\n  color: #ffffff;\n  font-size: 12px;\n  font-weight: 300;\n  line-height: 20px;\n  letter-spacing: 0.3px;\n`;\n\nexport const Percentage = styled.span`\n  color: #ffffff;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 20px;\n  letter-spacing: 0.45px;\n`;\n","import React from \"react\";\nimport * as S from \"./style\";\nimport PropTypes from \"prop-types\";\n\nexport const Statistics = ({ title, stats }) => {\n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  const items = stats.map((stat) => (\n    <S.Item key={stat.id} background={getRandomColor()}>\n      <S.Label>{stat.label}</S.Label>\n      <S.Percentage>{stat.percentage}</S.Percentage>\n    </S.Item>\n  ));\n\n  return (\n    <S.Wrapper>\n      <S.Title>{title}</S.Title>\n      <S.StatList>{items}</S.StatList>\n    </S.Wrapper>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nStatistics.defaultProps = {\n  title: \"Default\",\n  stats: [],\n};\n","import React from \"react\";\nimport { Profile } from \"./Profile/Profile\";\nimport { Statistics } from \"./Statistics/Statistics\";\n\nimport user from \"./mocks/user.json\";\nimport statisticalData from \"./mocks/Ñ–tatistics.json\";\n\nfunction App() {\n  return (\n    <div>\n      <Profile {...user} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}