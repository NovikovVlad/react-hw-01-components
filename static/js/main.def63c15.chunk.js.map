{"version":3,"sources":["Profile/style.js","Profile/Profile.jsx","utils/index.js","Statistics/style.js","Statistics/Statistics.jsx","App.js","index.js"],"names":["Wrapper","styled","div","Description","Avatar","img","Name","Tag","p","Location","Stats","ul","Label","span","Quantity","Profile","name","tag","location","avatar","stats","followers","views","likes","src","alt","defaultProps","getRandomColor","color","i","Math","floor","random","section","Title","h2","StatList","Item","li","background","Percentage","Statistics","title","items","map","id","label","percentage","key","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o2EAEO,IAAMA,EAAUC,IAAOC,IAAV,KAYPC,EAAcF,IAAOC,IAAV,KAMXE,EAASH,IAAOI,IAAV,KAONC,EAAOL,IAAOC,IAAV,KAOJK,EAAMN,IAAOO,EAAV,KAOHC,EAAWR,IAAOO,EAAV,KAORE,EAAQT,IAAOU,GAAV,KAsBLC,EAAQX,IAAOY,KAAV,KAKLC,EAAWb,IAAOY,KAAV,KCtERE,EAAU,SAAC,GAAD,IACrBC,EADqB,EACrBA,KACAC,EAFqB,EAErBA,IACAC,EAHqB,EAGrBA,SACAC,EAJqB,EAIrBA,OAJqB,IAKrBC,MAASC,EALY,EAKZA,UAAWC,EALC,EAKDA,MAAOC,EALN,EAKMA,MALN,OAOrB,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUC,IAAKL,EAAQM,IAAI,gBAC3B,kBAAC,EAAD,KAAST,GACT,kBAAC,EAAD,KAAQC,GACR,kBAAC,EAAD,KAAaC,IAEf,kBAAC,EAAD,KACE,4BACE,kBAAC,EAAD,kBACA,kBAAC,EAAD,SAAcG,IAEhB,4BACE,kBAAC,EAAD,cACA,kBAAC,EAAD,SAAcC,IAEhB,4BACE,kBAAC,EAAD,cACA,kBAAC,EAAD,SAAcC,OAkBtBR,EAAQW,aAAe,CACrBV,KAAM,UACNC,IAAK,GACLC,SAAU,GACVC,OAAQ,GACRC,MAAO,CACLC,UAAW,GACXC,MAAO,EACPC,MAAO,ICxDJ,IAAMI,EAAiB,WAG5B,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,G,uvCCJF,IAAM5B,EAAUC,IAAOgC,QAAV,KAYPC,EAAQjC,IAAOkC,GAAV,KAWLC,EAAWnC,IAAOU,GAAV,KAOR0B,EAAOpC,IAAOqC,GAAV,KAOD,qBAAGC,cAGN3B,EAAQX,IAAOY,KAAV,KAQL2B,EAAavC,IAAOY,KAAV,KC3CV4B,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACrBC,EADwC,EAAZvB,MACdwB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAAd,OACtB,kBAAC,EAAD,CAAQC,IAAKH,EAAIN,WAAYZ,KAC3B,kBAAC,EAAD,KAAUmB,GACV,kBAAC,EAAD,KAAeC,OAInB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAUL,GACV,kBAAC,EAAD,KAAaC,KAgBnBF,EAAWf,aAAe,CACxBgB,MAAO,UACPtB,MAAO,I,oBCpBM6B,MATf,WACE,OACE,6BACE,kBAAC,EAAYC,GACb,kBAAC,EAAD,CAAYR,MAAM,eAAetB,MAAO+B,MCN9CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.def63c15.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  font-family: \"Lato\", sans-serif;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 250px;\n  height: 330px;\n  box-shadow: 0 1px 3px rgba(191, 205, 222, 0.75);\n  background-color: #ffffff;\n  margin: 15px;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Avatar = styled.img`\n  padding: 30px;\n  width: 99px;\n  height: 99px;\n  border-radius: 50%;\n`;\n\nexport const Name = styled.div`\n  color: #122236;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 32px;\n`;\n\nexport const Tag = styled.p`\n  margin: 0;\n  padding: 0;\n  color: #768696;\n  font-size: 14px;\n`;\n\nexport const Location = styled.p`\n  margin: 0;\n  padding: 0;\n  color: #768696;\n  font-size: 14px;\n`;\n\nexport const Stats = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  height: 74px;\n  border: 1px solid #e4e9f0;\n  background-color: #f3f6f9;\n\n  li {\n    display: flex;\n    width: 83px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  li + li {\n    border-left: 1px solid #e4e9f0;\n  }\n`;\n\nexport const Label = styled.span`\n  color: #768696;\n  font-size: 12px;\n`;\n\nexport const Quantity = styled.span`\n  color: #1f3349;\n  font-size: 14px;\n  font-weight: 700;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as S from \"./style\";\n\nexport const Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) => (\n  <S.Wrapper>\n    <S.Description>\n      <S.Avatar src={avatar} alt=\"user avatar\" />\n      <S.Name>{name}</S.Name>\n      <S.Tag>{tag}</S.Tag>\n      <S.Location>{location}</S.Location>\n    </S.Description>\n    <S.Stats>\n      <li>\n        <S.Label>Followers</S.Label>\n        <S.Quantity> {followers}</S.Quantity>\n      </li>\n      <li>\n        <S.Label>Views</S.Label>\n        <S.Quantity> {views}</S.Quantity>\n      </li>\n      <li>\n        <S.Label>Likes</S.Label>\n        <S.Quantity> {likes}</S.Quantity>\n      </li>\n    </S.Stats>\n  </S.Wrapper>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nProfile.defaultProps = {\n  name: \"Unknown\",\n  tag: \"\",\n  location: \"\",\n  avatar: \"\",\n  stats: {\n    followers: \"\",\n    views: 0,\n    likes: 0,\n  },\n};\n","export const getRandomColor = () => {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.section`\n  width: 268px;\n  height: 130px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: 0 2px 2px rgba(2, 2, 2, 0.02);\n  background-color: #ffffff;\n  font-family: sans-serif;\n  margin: 15px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  padding: 30px 0;\n  color: #475965;\n  font-size: 16px;\n  font-weight: 400;\n  text-transform: uppercase;\n  letter-spacing: 0.16px;\n  text-align: center;\n`;\n\nexport const StatList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 67px;\n  height: 60px;\n  align-items: center;\n  background: ${({ background }) => background};\n`;\n\nexport const Label = styled.span`\n  color: #ffffff;\n  font-size: 12px;\n  font-weight: 300;\n  line-height: 20px;\n  letter-spacing: 0.3px;\n`;\n\nexport const Percentage = styled.span`\n  color: #ffffff;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 20px;\n  letter-spacing: 0.45px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { getRandomColor } from \"../utils\";\n\nimport * as S from \"./style\";\n\nexport const Statistics = ({ title, stats }) => {\n  const items = stats.map(({ id, label, percentage }) => (\n    <S.Item key={id} background={getRandomColor()}>\n      <S.Label>{label}</S.Label>\n      <S.Percentage>{percentage}</S.Percentage>\n    </S.Item>\n  ));\n\n  return (\n    <S.Wrapper>\n      <S.Title>{title}</S.Title>\n      <S.StatList>{items}</S.StatList>\n    </S.Wrapper>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nStatistics.defaultProps = {\n  title: \"Default\",\n  stats: [],\n};\n","import React from \"react\";\nimport { Profile } from \"./Profile/Profile\";\nimport { Statistics } from \"./Statistics/Statistics\";\n\nimport user from \"./mocks/user.json\";\nimport statisticalData from \"./mocks/Ñ–tatistics.json\";\n\nfunction App() {\n  return (\n    <div>\n      <Profile {...user} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}